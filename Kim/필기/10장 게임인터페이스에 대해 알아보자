이번 시간에는 게임에서의 UI를 어떻게 만드는지 말해볼것이다.
일단 Hierachy에서 우클릭을 누르면 UI가 있는데 
그 중에서 CANVAS를 클릭해주도록 하자.
그리고 Scence의 2D버튼을 누르면 프로그램을 실행했을 때 보이게 되는
화면의 크기를 보여준다 이것을 스크린이라고 부른다.
스크린 : 게임이 표시되는 화면, 해상도로 크기 결정.
게임을 볼 때 1. 카메라가 보여주는 세상 2.스크린이 보여주는 세상 
두 가지로 구성되는데 인터페이스는 기본적으로 2에 달려있다.
우리가 흔히 입력받는 Input.MouseClick이라는 함수에서 출력되는 좌표도
이 스크린 상에서 있는 마우스의 좌표를 가지고 온다.
1. 텍스트 UI
텍스트 UI는 방금 만든 Canvas를 우클릭하고 UI-Legacy-Text를 클릭해주자.
여기서 글자를 넣을 수 있고 폰트 설정도 바꿀 수 있다.
텍스트에는 정해진 크기가 있는데 정해진 크기를 오버해서도 출력하고 싶다면,
Hozirontal/vertical overflow에서 설정을 바꿔주면 가능하다.
2. 이미지 UI
기본적으로 이미지를 표현하는 UI다. 
텍스쳐를 올려서 해당 이미지의 크기 색을 바꾸다던가
여러가지로 슬라이스를 하는 것도 가능하고 일부분을 검은색으로 만들어서
로딩처럼 표현하는 것도 가능하다.
그리고 우선순위는 Hierachy에 저장된 순서로 취급된다. 
3. 버튼 UI
기본적으로 버튼이고 클릭하게 되면 특정한 상호작용이 일어난다.
이미지와 텍스트 둘 다 설정가능하다.
Interactive는 해당 버튼을 동작하게 할 것인지를 물어보는 것이다.
Transition은 해당 버튼을 클릭하면 어떤 동작을 할 것인지 물어보는 것이다.
color Tint는 색을 바꿔준다. 아래에서 색 설정은 각각 직관적으로 해석하면 해석이 될것이다.
가장 중요한건 On Click()인데 버튼이 클릭 됐을 때 호출되는 함수이다.
+를 누르면 기능을 추가할 수 있고 호출되는 물체를 직접 집어넣어 줄 수 있는데
여기에 my ball을 넣어보도록 하자.
public void Jump(){
        rigid.AddForce(Vector3.up*100,ForceMode.Impulse);
    }
간단하게 이런 코드를 my ball스크립트 안에 넣어주도록 하고,
그리고 다시 돌아가서 No function에서 my ball안의 스크립트 이름에 마우스를 올리면
함수들이 나올텐데 거기서 Jump를 클릭해주자.
그리고 실행한 뒤 버튼을 눌러주면 공이 점프하는 것을 볼 수 있다.
버튼은 이렇게 사용하면 된다.
근데 UI의 구성요소들이 자꾸 여기저기로 도망치는 모습을 볼 수 있는데
이걸 박아주는 역할을 하는 가장 중요한 아이를 지금부터 설명해보고자 한다.
4.앵커
쉽게 얘기하자면 UI요소들을 해상도에 맞게 보정을 시킨다고 생각하면 된다.
UI요소들은 다른 게임 구성 오브젝트들이 그냥 Tranform을 가지는 것에 다른
Rect Transform을 가지는 것을 확인할 수 있다. 얘는 해상도를 가지고 위치를 표현한것이다.
왼쪽에 과녁같은걸 클릭하면 Ancher Preset이라는게 나온다.
중앙에 나비같은게 보일텐데 그게 Ancher의 중심점이라고 생각하면 된다.
그래서 Rect Transform에 표현되는 좌표는 해당 요소가 앵커로부터 좌표가 얼마나 떨어져있는지를 보여준다.
이 상태에서 shift를 누르면 파란색 점이 나오는데 
얘는 스크린이 아닌 컴포넌트로부터의 기준점을 의미한다. 그리고 이 상태에서 앵커 프리셋중 하나를 클릭하면
잡고 옮길 필요없이 요소가 알아서 정렬을 하게 된다.
그리고 alt를 누르면 해당 컴포넌트의 위치까지 표현해준다.
이것을 통해서 UI 요소를 박아주면 해상도가 바뀌어도 요소가 비율에 맞춰서 재정렬하게 된다.