저번 시간에는 Rigid와 Collider 그리고 AddForce라는 함수를 이용해서 물체를 원하는 방향으로 움직이는 것을 배웠다.
이번에는 물체 충돌시 일어나는 이벤트를 조정해보도록 하자.
충돌시 색이 바뀌거나 그런 이벤트를 위해서 
물체의 재질을 관리하던 Material을 가져오고 오브젝트의 재질에 접근 할 수 있는 MeshRenderer를 가져오자.
MeshRenderer mesh;
Material mat;
그리고 
void Start()
    {
        mesh = GetComponent<MeshRenderer>();
        mat=mesh.material;
    }
을 통해 객체를 만들어주도록 하자.
그리고 함수를 만들어주자.
private void OnCollisionEnter(Collision collision){ //보통 이벤트 함수 앞에는 On이 붙는다.
        //물리적인 충돌이 시작될 때 호출되는 함수이다.

    }
private void OnCollisionStay(Collision collision){ //보통 이벤트 함수 앞에는 On이 붙는다.
        //물리적인 충돌중일때 호출되는 함수이다.

    }
private void OnCollisionExit(Collision collision){ //보통 이벤트 함수 앞에는 On이 붙는다.
        //물리적인 충돌이 끝났을 때 호출되는 함수이다.

    }
우리는 Enter만 사용하도록 하자.
mat.color=new Color(1,1,1); 를 넣어주고 실행하면 
바로 색이 바뀌는 것을 볼 수 있다. 그 이유는 바닥과의 충돌이 일어난 것이 원인이다.
if(collision.gameObject.name == "My ball")//Collision은 충돌을 관장하는 클래스이다.
            mat.color=new Color(1,1,1);
이렇게 바꿔주면 해결된다.
2번째 방법으로는 Trigger방식이 있다.
Colldier를 보면 Is Trigger가 있는데 이걸 체크를 하자.
큰 큐브를 하나 생성해주고 Rigidbody는 제외해주자.(그러면 큐브안으로 공이 들어갈 수 있다.)
그리고 My ball의 스크립트에 들어가자(움직이는 공) 
private void OnTriggerStay(Collider other){//Collsion이 아닌 이유는 얘는 충돌을 보는게 아니라 그냥 겹쳤냐 안겹쳤냐를 보기때문에 hitbox를 관장하는 Collider를 가져온다.
        if(other.name=="Cube")
            rigid.AddForce(Vector3.up*50,ForceMode.Impulse);
    }
라고 입력해주면 큐브안으로 들어갔을 때(큐브와 공의 히트박스가 겹치면)공이 점프대에 올라간것처럼 붕 뜨게된다.
